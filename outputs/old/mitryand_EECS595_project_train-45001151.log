loading file vocab.txt from cache at /home/mitryand/.cache/huggingface/hub/models--bert-base-uncased/snapshots/0a6aa9128b6194f4f3c4db429b6cb4891cdb421b/vocab.txt
loading file added_tokens.json from cache at None
loading file special_tokens_map.json from cache at None
loading file tokenizer_config.json from cache at /home/mitryand/.cache/huggingface/hub/models--bert-base-uncased/snapshots/0a6aa9128b6194f4f3c4db429b6cb4891cdb421b/tokenizer_config.json
loading configuration file config.json from cache at /home/mitryand/.cache/huggingface/hub/models--bert-base-uncased/snapshots/0a6aa9128b6194f4f3c4db429b6cb4891cdb421b/config.json
Model config BertConfig {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "classifier_dropout": null,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "transformers_version": "4.24.0",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

loading file vocab.json from cache at /home/mitryand/.cache/huggingface/hub/models--gpt2/snapshots/75e09b43581151bd1d9ef6700faa605df408979f/vocab.json
loading file merges.txt from cache at /home/mitryand/.cache/huggingface/hub/models--gpt2/snapshots/75e09b43581151bd1d9ef6700faa605df408979f/merges.txt
loading file tokenizer.json from cache at /home/mitryand/.cache/huggingface/hub/models--gpt2/snapshots/75e09b43581151bd1d9ef6700faa605df408979f/tokenizer.json
loading file added_tokens.json from cache at None
loading file special_tokens_map.json from cache at None
loading file tokenizer_config.json from cache at None
loading configuration file config.json from cache at /home/mitryand/.cache/huggingface/hub/models--gpt2/snapshots/75e09b43581151bd1d9ef6700faa605df408979f/config.json
Model config GPT2Config {
  "_name_or_path": "gpt2",
  "activation_function": "gelu_new",
  "architectures": [
    "GPT2LMHeadModel"
  ],
  "attn_pdrop": 0.1,
  "bos_token_id": 50256,
  "embd_pdrop": 0.1,
  "eos_token_id": 50256,
  "initializer_range": 0.02,
  "layer_norm_epsilon": 1e-05,
  "model_type": "gpt2",
  "n_ctx": 1024,
  "n_embd": 768,
  "n_head": 12,
  "n_inner": null,
  "n_layer": 12,
  "n_positions": 1024,
  "reorder_and_upcast_attn": false,
  "resid_pdrop": 0.1,
  "scale_attn_by_inverse_layer_idx": false,
  "scale_attn_weights": true,
  "summary_activation": null,
  "summary_first_dropout": 0.1,
  "summary_proj_to_labels": true,
  "summary_type": "cls_index",
  "summary_use_proj": true,
  "task_specific_params": {
    "text-generation": {
      "do_sample": true,
      "max_length": 50
    }
  },
  "transformers_version": "4.24.0",
  "use_cache": true,
  "vocab_size": 50257
}

loading configuration file config.json from cache at /home/mitryand/.cache/huggingface/hub/models--bert-base-uncased/snapshots/0a6aa9128b6194f4f3c4db429b6cb4891cdb421b/config.json
Model config BertConfig {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "classifier_dropout": null,
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "transformers_version": "4.24.0",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

loading weights file pytorch_model.bin from cache at /home/mitryand/.cache/huggingface/hub/models--bert-base-uncased/snapshots/0a6aa9128b6194f4f3c4db429b6cb4891cdb421b/pytorch_model.bin
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.bias', 'cls.seq_relationship.weight', 'cls.predictions.transform.LayerNorm.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
All the weights of BertModel were initialized from the model checkpoint at bert-base-uncased.
If your task is similar to the task the model of the checkpoint was trained on, you can already use BertModel for predictions without further training.
loading configuration file config.json from cache at /home/mitryand/.cache/huggingface/hub/models--gpt2/snapshots/75e09b43581151bd1d9ef6700faa605df408979f/config.json
Model config GPT2Config {
  "_name_or_path": "gpt2",
  "activation_function": "gelu_new",
  "architectures": [
    "GPT2LMHeadModel"
  ],
  "attn_pdrop": 0.1,
  "bos_token_id": 50256,
  "embd_pdrop": 0.1,
  "eos_token_id": 50256,
  "initializer_range": 0.02,
  "layer_norm_epsilon": 1e-05,
  "model_type": "gpt2",
  "n_ctx": 1024,
  "n_embd": 768,
  "n_head": 12,
  "n_inner": null,
  "n_layer": 12,
  "n_positions": 1024,
  "reorder_and_upcast_attn": false,
  "resid_pdrop": 0.1,
  "scale_attn_by_inverse_layer_idx": false,
  "scale_attn_weights": true,
  "summary_activation": null,
  "summary_first_dropout": 0.1,
  "summary_proj_to_labels": true,
  "summary_type": "cls_index",
  "summary_use_proj": true,
  "task_specific_params": {
    "text-generation": {
      "do_sample": true,
      "max_length": 50
    }
  },
  "transformers_version": "4.24.0",
  "use_cache": true,
  "vocab_size": 50257
}

Initializing gpt2 as a decoder model. Cross attention layers are added to gpt2 and randomly initialized if gpt2's architecture allows for cross attention layers.
loading weights file pytorch_model.bin from cache at /home/mitryand/.cache/huggingface/hub/models--gpt2/snapshots/75e09b43581151bd1d9ef6700faa605df408979f/pytorch_model.bin
All model checkpoint weights were used when initializing GPT2LMHeadModel.

Some weights of GPT2LMHeadModel were not initialized from the model checkpoint at gpt2 and are newly initialized: ['h.10.ln_cross_attn.weight', 'h.6.crossattention.q_attn.weight', 'h.10.crossattention.q_attn.weight', 'h.4.crossattention.bias', 'h.10.crossattention.c_proj.bias', 'h.0.crossattention.c_attn.weight', 'h.10.crossattention.bias', 'h.1.crossattention.c_proj.bias', 'h.8.crossattention.c_proj.weight', 'h.3.crossattention.c_proj.weight', 'h.5.crossattention.bias', 'h.5.crossattention.c_proj.weight', 'h.11.ln_cross_attn.weight', 'h.1.crossattention.bias', 'h.4.crossattention.c_proj.bias', 'h.11.crossattention.c_proj.bias', 'h.5.crossattention.masked_bias', 'h.3.crossattention.c_proj.bias', 'h.8.crossattention.c_attn.weight', 'h.0.crossattention.bias', 'h.3.crossattention.c_attn.weight', 'h.5.crossattention.c_attn.weight', 'h.2.crossattention.c_proj.weight', 'h.3.ln_cross_attn.weight', 'h.4.crossattention.q_attn.weight', 'h.5.crossattention.c_proj.bias', 'h.7.crossattention.q_attn.weight', 'h.7.crossattention.masked_bias', 'h.9.crossattention.masked_bias', 'h.10.crossattention.c_attn.weight', 'h.10.crossattention.c_proj.weight', 'h.2.crossattention.bias', 'h.2.crossattention.c_proj.bias', 'h.1.crossattention.c_proj.weight', 'h.9.crossattention.bias', 'h.7.crossattention.bias', 'h.10.crossattention.masked_bias', 'h.0.ln_cross_attn.weight', 'h.1.ln_cross_attn.weight', 'h.0.crossattention.masked_bias', 'h.6.crossattention.masked_bias', 'h.11.crossattention.masked_bias', 'h.5.ln_cross_attn.weight', 'h.11.crossattention.bias', 'h.11.crossattention.q_attn.weight', 'h.0.crossattention.q_attn.weight', 'h.1.crossattention.masked_bias', 'h.9.crossattention.c_proj.weight', 'h.8.crossattention.masked_bias', 'h.2.ln_cross_attn.weight', 'h.6.crossattention.c_proj.weight', 'h.2.crossattention.c_attn.weight', 'h.2.crossattention.masked_bias', 'h.6.crossattention.c_proj.bias', 'h.8.crossattention.c_proj.bias', 'h.9.crossattention.c_attn.weight', 'h.4.crossattention.c_proj.weight', 'h.3.crossattention.masked_bias', 'h.4.ln_cross_attn.weight', 'h.7.ln_cross_attn.weight', 'h.8.crossattention.q_attn.weight', 'h.5.crossattention.q_attn.weight', 'h.4.crossattention.c_attn.weight', 'h.0.crossattention.c_proj.weight', 'h.9.crossattention.c_proj.bias', 'h.3.crossattention.q_attn.weight', 'h.4.crossattention.masked_bias', 'h.3.crossattention.bias', 'h.7.crossattention.c_proj.weight', 'h.6.ln_cross_attn.weight', 'h.6.crossattention.bias', 'h.8.crossattention.bias', 'h.11.crossattention.c_attn.weight', 'h.2.crossattention.q_attn.weight', 'h.11.crossattention.c_proj.weight', 'h.9.ln_cross_attn.weight', 'h.6.crossattention.c_attn.weight', 'h.7.crossattention.c_attn.weight', 'h.9.crossattention.q_attn.weight', 'h.7.crossattention.c_proj.bias', 'h.8.ln_cross_attn.weight', 'h.1.crossattention.q_attn.weight', 'h.0.crossattention.c_proj.bias', 'h.1.crossattention.c_attn.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Set `config.is_decoder=True` and `config.add_cross_attention=True` for decoder_config
loaded 58 training samples
loaded 14 validation samples
loaded 2 test samples
created model
Begin training!
  0%|          | 0/58 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 175, in <module>
    main(params)
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 160, in main
    model = train(model, train_dataloader, eval_dataloader, params)
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 118, in train
    outputs = model(input_ids=batch[0], labels=batch[0])
  File "/home/mitryand/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mitryand/.local/lib/python3.10/site-packages/transformers/models/encoder_decoder/modeling_encoder_decoder.py", line 617, in forward
    decoder_outputs = self.decoder(
  File "/home/mitryand/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mitryand/.local/lib/python3.10/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 1046, in forward
    transformer_outputs = self.transformer(
  File "/home/mitryand/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mitryand/.local/lib/python3.10/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 889, in forward
    outputs = block(
  File "/home/mitryand/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mitryand/.local/lib/python3.10/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 426, in forward
    feed_forward_hidden_states = self.mlp(hidden_states)
  File "/home/mitryand/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mitryand/.local/lib/python3.10/site-packages/transformers/models/gpt2/modeling_gpt2.py", line 354, in forward
    hidden_states = self.act(hidden_states)
  File "/home/mitryand/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/mitryand/.local/lib/python3.10/site-packages/transformers/activations.py", line 35, in forward
    return 0.5 * input * (1.0 + torch.tanh(math.sqrt(2.0 / math.pi) * (input + 0.044715 * torch.pow(input, 3.0))))
RuntimeError: CUDA out of memory. Tried to allocate 272.00 MiB (GPU 0; 44.37 GiB total capacity; 42.77 GiB already allocated; 230.50 MiB free; 43.05 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
  0%|          | 0/58 [00:02<?, ?it/s]
