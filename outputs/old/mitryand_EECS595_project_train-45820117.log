If you want to use `BertLMHeadModel` as a standalone, add `is_decoder=True.`
loaded 1220 training samples
loaded 273 validation samples
loaded 33 test samples
Begin testing style transfer!
Traceback (most recent call last):
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 431, in <module>
    main(params)
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 412, in main
    evaluate_transfer(model,classifier, train_dataloader, eval_dataloader, params, input_tokenizer, output_tokenizer)
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 200, in evaluate_transfer
    z_alt = fgim_attack(model, classifier, ((cls_pred + 1)%2), z)
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 82, in fgim_attack
    L_BOW = bow_criterion(sent_vec_to_bow(sentence_now).flatten(), sent_vec_to_bow(sentence_og).flatten())
  File "/home/mitryand/EECS-595-Final-Project-Style-Transfer/train_model.py", line 63, in bow_criterion
    return torch.mean(target - guess)/torch.abs(target - guess)
RuntimeError: mean(): could not infer output dtype. Input dtype must be either a floating point or complex dtype. Got: Long
